{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nclass AuthenticationService {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.userSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('user')));\n    this.user = this.userSubject.asObservable();\n  }\n  get userValue() {\n    return this.userSubject.value;\n  }\n  login(email, password) {\n    return this.http.post(`${environment.backApi}/login`, {\n      email,\n      password\n    }).pipe(map(user => {\n      if (user != null) {\n        localStorage.setItem('user', JSON.stringify(user));\n        this.userSubject.next(user);\n      }\n    }));\n  }\n  register(email, password, firstName, lastName, phoneNumber) {\n    return this.http.post(`${environment.backApi}/register/user`, {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber\n    }, {\n      responseType: 'text'\n    }).pipe(map(response => {\n      localStorage.setItem('register', JSON.stringify(response));\n    }));\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthenticationService };","map":{"version":3,"names":["BehaviorSubject","map","environment","AuthenticationService","constructor","router","http","userSubject","JSON","parse","localStorage","getItem","user","asObservable","userValue","value","login","email","password","post","backApi","pipe","setItem","stringify","next","register","firstName","lastName","phoneNumber","responseType","response","i0","ɵɵinject","i1","Router","i2","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Razvan Gheorghita\\Desktop\\Licenta\\frontend\\webapp\\src\\app\\services\\authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { User } from '../models/user';\nimport { environment } from 'src/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private userSubject: BehaviorSubject<User | null>;\n  public user: Observable<User | null>;\n  \n  constructor(\n    private router: Router,\n    private http: HttpClient\n  ) {\n      this.userSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('user')!));\n      this.user = this.userSubject.asObservable();\n   }\n\n  public get userValue() {\n    return this.userSubject.value;\n  }\n\n  login(email: string, password: string) {\n    return this.http.post<User>(`${environment.backApi}/login`, {email, password})\n      .pipe(map(user => {\n        if(user != null )\n        {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.userSubject.next(user);\n        }\n      }));\n  }\n\n  register(email: string, password: string, firstName: string, lastName: string, phoneNumber: string) {\n    return this.http.post(`${environment.backApi}/register/user`, {email, password, firstName, lastName, phoneNumber}, {responseType: 'text'})\n      .pipe(map(response => {\n        localStorage.setItem('register', JSON.stringify(response));\n      }))\n\n  }\n}\n"],"mappings":"AAGA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,GAAG,QAAQ,gBAAgB;AAGpC,SAASC,WAAW,QAAQ,iBAAiB;;;;AAE7C,MAGaC,qBAAqB;EAIhCC,YACUC,MAAc,EACdC,IAAgB;IADhB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IAEV,IAAI,CAACC,WAAW,GAAG,IAAIP,eAAe,CAACQ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;IACjF,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,YAAY,EAAE;EAC9C;EAED,IAAWC,SAASA,CAAA;IAClB,OAAO,IAAI,CAACP,WAAW,CAACQ,KAAK;EAC/B;EAEAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAO,GAAGjB,WAAW,CAACkB,OAAO,QAAQ,EAAE;MAACH,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAC3EG,IAAI,CAACpB,GAAG,CAACW,IAAI,IAAG;MACf,IAAGA,IAAI,IAAI,IAAI,EACf;QACEF,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEd,IAAI,CAACe,SAAS,CAACX,IAAI,CAAC,CAAC;QAClD,IAAI,CAACL,WAAW,CAACiB,IAAI,CAACZ,IAAI,CAAC;;IAE/B,CAAC,CAAC,CAAC;EACP;EAEAa,QAAQA,CAACR,KAAa,EAAEC,QAAgB,EAAEQ,SAAiB,EAAEC,QAAgB,EAAEC,WAAmB;IAChG,OAAO,IAAI,CAACtB,IAAI,CAACa,IAAI,CAAC,GAAGjB,WAAW,CAACkB,OAAO,gBAAgB,EAAE;MAACH,KAAK;MAAEC,QAAQ;MAAEQ,SAAS;MAAEC,QAAQ;MAAEC;IAAW,CAAC,EAAE;MAACC,YAAY,EAAE;IAAM,CAAC,CAAC,CACvIR,IAAI,CAACpB,GAAG,CAAC6B,QAAQ,IAAG;MACnBpB,YAAY,CAACY,OAAO,CAAC,UAAU,EAAEd,IAAI,CAACe,SAAS,CAACO,QAAQ,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;EAEP;;AAjCW3B,qBAAqB,C;mBAArBA,qBAAqB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAArBjC,qBAAqB,C;SAArBA,qBAAqB;EAAAkC,OAAA,EAArBlC,qBAAqB,CAAAmC,IAAA;EAAAC,UAAA,EAFpB;AAAM;SAEPpC,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}