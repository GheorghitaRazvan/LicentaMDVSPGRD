{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nlet LoginComponent = class LoginComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.accountService.login(this.f.username.value, this.f.password.value).pipe(first()).subscribe({\n      next: () => {\n        // get return url from query parameters or default to home page\n        const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n        this.router.navigateByUrl(returnUrl);\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.loading = false;\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  templateUrl: 'login.component.html'\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","Validators","first","LoginComponent","constructor","formBuilder","route","router","accountService","alertService","loading","submitted","ngOnInit","form","group","username","required","password","f","controls","onSubmit","clear","invalid","login","value","pipe","subscribe","next","returnUrl","snapshot","queryParams","navigateByUrl","error","__decorate","templateUrl"],"sources":["C:\\Users\\Razvan Gheorghita\\Desktop\\Licenta\\frontend\\webapp\\src\\app\\authentication\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    form!: FormGroup;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.accountService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from query parameters or default to home page\n                    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n                    this.router.navigateByUrl(returnUrl);\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,KAAK,QAAQ,gBAAgB;AAKtC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAKvBC,YACYC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc,EACdC,cAA8B,EAC9BC,YAA0B;IAJ1B,KAAAJ,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,YAAY,GAAZA,YAAY;IARxB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,SAAS,GAAG,KAAK;EAQb;EAEJC,QAAQA,CAAA;IACJ,IAAI,CAACC,IAAI,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC;MAC/BC,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACe,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACe,QAAQ;KACrC,CAAC;EACN;EAEA;EACA,IAAIE,CAACA,CAAA;IAAK,OAAO,IAAI,CAACL,IAAI,CAACM,QAAQ;EAAE;EAErCC,QAAQA,CAAA;IACJ,IAAI,CAACT,SAAS,GAAG,IAAI;IAErB;IACA,IAAI,CAACF,YAAY,CAACY,KAAK,EAAE;IAEzB;IACA,IAAI,IAAI,CAACR,IAAI,CAACS,OAAO,EAAE;MACnB;;IAGJ,IAAI,CAACZ,OAAO,GAAG,IAAI;IACnB,IAAI,CAACF,cAAc,CAACe,KAAK,CAAC,IAAI,CAACL,CAAC,CAACH,QAAQ,CAACS,KAAK,EAAE,IAAI,CAACN,CAAC,CAACD,QAAQ,CAACO,KAAK,CAAC,CAClEC,IAAI,CAACvB,KAAK,EAAE,CAAC,CACbwB,SAAS,CAAC;MACPC,IAAI,EAAEA,CAAA,KAAK;QACP;QACA,MAAMC,SAAS,GAAG,IAAI,CAACtB,KAAK,CAACuB,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG;QACrE,IAAI,CAACvB,MAAM,CAACwB,aAAa,CAACH,SAAS,CAAC;MACxC,CAAC;MACDI,KAAK,EAAEA,KAAK,IAAG;QACX,IAAI,CAACvB,YAAY,CAACuB,KAAK,CAACA,KAAK,CAAC;QAC9B,IAAI,CAACtB,OAAO,GAAG,KAAK;MACxB;KACH,CAAC;EACV;CACH;AAjDYP,cAAc,GAAA8B,UAAA,EAD1BjC,SAAS,CAAC;EAAEkC,WAAW,EAAE;AAAsB,CAAE,CAAC,C,EACtC/B,cAAc,CAiD1B;SAjDYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}